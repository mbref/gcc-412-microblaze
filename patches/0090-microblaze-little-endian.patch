diff -Naurp /tmp/gcc-4.1.2/config.sub gcc-4.1.2/config.sub
--- /tmp/gcc-4.1.2/config.sub	2010-08-05 09:37:12.995653100 +0200
+++ gcc-4.1.2/config.sub	2010-08-07 23:17:21.312247896 +0200
@@ -146,7 +146,7 @@ case $os in
 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
-	-apple | -axis | -knuth | -cray | -microblaze )
+	-apple | -axis | -knuth | -cray | -microblaze* )
 		os=
 		basic_machine=$1
 		;;
@@ -678,7 +678,10 @@ case $basic_machine in
 		basic_machine=ns32k-utek
 		os=-sysv
 		;;
-	microblaze*-*)
+	microblazeel-*)
+		basic_machine=microblazeel-xilinx
+                ;;
+	microblaze-*)
 		basic_machine=microblaze-xilinx
                 ;;
 	mingw32)
diff -Naurp /tmp/gcc-4.1.2/configure gcc-4.1.2/configure
--- /tmp/gcc-4.1.2/configure	2010-08-05 09:37:13.525628935 +0200
+++ gcc-4.1.2/configure	2010-08-06 20:15:47.983010670 +0200
@@ -1218,7 +1218,7 @@ case "${target}" in
   m32c-*-*)
     noconfigdirs="$noconfigdirs target-libstdc++-v3"
     ;;
-  microblaze-*-linux-*)
+  microblaze*-*-linux-*)
     noconfigdirs="$noconfigdirs target-libmudflap"
     ;;
   alpha*-dec-osf*)
diff -Naurp /tmp/gcc-4.1.2/gcc/config/microblaze/linux.h gcc-4.1.2/gcc/config/microblaze/linux.h
--- /tmp/gcc-4.1.2/gcc/config/microblaze/linux.h	2010-08-05 09:37:13.425633287 +0200
+++ gcc-4.1.2/gcc/config/microblaze/linux.h	2010-08-07 12:30:41.125290484 +0200
@@ -2,6 +2,24 @@
 #define SYSROOT_SUFFIX_SPEC ""
 #define SYSROOT_HEADERS_SUFFIX_SPEC ""
 
+#if 1
+/* TARGET_BIG_ENDIAN_DEFAULT is set in
+   config.gcc for big endian configurations.  */
+#if TARGET_BIG_ENDIAN_DEFAULT
+#define TARGET_ENDIAN_DEFAULT    0
+#define TARGET_ENDIAN_OPTION     "mbig-endian"
+#else
+#define TARGET_ENDIAN_DEFAULT    MASK_LITTLE_ENDIAN
+#define TARGET_ENDIAN_OPTION     "mlittle-endian"
+#endif
+#endif
+
+#if 0
+#undef DRIVER_SELF_SPECS
+#define DRIVER_SELF_SPECS   \
+   { "-" TARGET_ENDIAN_OPTION }
+#endif
+
 /* Redefine the entire default search path for include files so that
    it will be generated by compiler dynamically on base of the compiler's
    binary location. */
@@ -42,15 +60,23 @@
 #define TARGET_CPU_CPP_BUILTINS()				\
   do								\
     {								\
-        builtin_define ("_BIG_ENDIAN");                         \
         builtin_define ("__MICROBLAZE__");                      \
         builtin_define ("__microblaze__");                      \
+        if (TARGET_LITTLE_ENDIAN)                               \
+          {                                                     \
+              builtin_define ("_LITTLE_ENDIAN");                \
+              builtin_define ("__MICROBLAZEEL__");              \
+          }                                                     \
+        else                                                    \
+          {                                                     \
+              builtin_define ("_BIG_ENDIAN");                   \
+              builtin_define ("__MICROBLAZEEB__");              \
+          }                                                     \
                                                                 \
         builtin_assert ("cpu=microblaze");                      \
         builtin_assert ("machine=microblaze");                  \
 } while (0)
 
-
 #define DYNAMIC_LINKER "/lib/ld.so.1"
 #undef  SUBTARGET_EXTRA_SPECS
 #define SUBTARGET_EXTRA_SPECS \
@@ -62,5 +88,11 @@
     %{!static: \
       %{rdynamic:-export-dynamic} \
       %{!dynamic-linker:-dynamic-linker %(dynamic_linker)}} \
-    %{static:-static}}"
+    %{static:-static}} \
+  %{mbig-endian:-EB} \
+  %{mlittle-endian:-EL}"
+
+#undef  MULTILIB_DEFAULTS
+#define MULTILIB_DEFAULTS \
+        { TARGET_ENDIAN_OPTION }
 
diff -Naurp /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.h gcc-4.1.2/gcc/config/microblaze/microblaze.h
--- /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.h	2010-08-05 09:37:13.515629170 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze.h	2010-08-08 09:23:40.487965613 +0200
@@ -203,16 +203,15 @@ extern char *microblaze_no_clearbss;
 
 
 /* Default target_flags if no switches are specified  */
-#define TARGET_DEFAULT      (MASK_SOFT_MUL | MASK_SOFT_DIV | MASK_SOFT_FLOAT)
+#ifndef TARGET_DEFAULT_ENDIAN
+#define TARGET_DEFAULT_ENDIAN 0
+#endif
+#define TARGET_DEFAULT      (TARGET_ENDIAN_DEFAULT | MASK_SOFT_MUL | MASK_SOFT_DIV | MASK_SOFT_FLOAT)
 
 #ifndef TARGET_CPU_DEFAULT
 #define TARGET_CPU_DEFAULT 0
 #endif
 
-#ifndef TARGET_ENDIAN_DEFAULT
-#define TARGET_ENDIAN_DEFAULT MASK_BIG_ENDIAN
-#endif
-
 /* What is the default setting for -mcpu= . We set it to v4.00.a even though 
    we are actually ahead. This is safest version that has generate code compatible 
    for the original ISA */
@@ -312,7 +311,16 @@ while (0)
   do								\
     {								\
         builtin_define ("microblaze");                          \
-        builtin_define ("_BIG_ENDIAN");                         \
+        if (TARGET_LITTLE_ENDIAN)                               \
+          {                                                     \
+              builtin_define ("_LITTLE_ENDIAN");                \
+              builtin_define ("__MICROBLAZEEL__");              \
+          }                                                     \
+        else                                                    \
+          {                                                     \
+              builtin_define ("_BIG_ENDIAN");                   \
+              builtin_define ("__MICROBLAZEEB__");              \
+          }                                                     \
         builtin_define ("__MICROBLAZE__");                      \
                                                                 \
         builtin_assert ("system=unix");                         \
@@ -400,7 +408,9 @@ while (0)
 #define ASM_SPEC "\
 %{microblaze1} \
 %(target_asm_spec) \
-%(subtarget_asm_spec)"
+%(subtarget_asm_spec) \
+%{mlittle-endian:-EL; \
+  mbig-endian:-EB}"
 
 /* old asm spec */
 /*#define ASM_SPEC "\
@@ -424,9 +434,11 @@ while (0)
 /* Extra switches sometimes passed to the linker.  */
 /* ??? The bestGnum will never be passed to the linker, because the gcc driver
    will interpret it as a -b option.  */
-
-#define LINK_SPEC "%{shared:-shared} -N -relax %{Zxl-mode-xmdstub:-defsym _TEXT_START_ADDR=0x800} \
-  %{!mxl-gp-opt: -G 0} %{!Wl,-T*: %{!T*: -T xilinx.ld%s}}"
+#define LINK_SPEC "%{shared:-shared} \
+%{mbig-endian:-EB} \
+%{mlittle-endian:-EL} \
+-N -relax %{Zxl-mode-xmdstub:-defsym _TEXT_START_ADDR=0x800}          \
+%{mxl-gp-opt:%{G*}} %{!mxl-gp-opt: -G 0} %{!Wl,-T*: %{!T*: -T xilinx.ld%s}}"
 
 /* Specs for the compiler proper */
 
@@ -813,14 +825,21 @@ while (0)
 #define BITS_BIG_ENDIAN 0
 
 /* Define this if most significant byte of a word is the lowest numbered. */
-#define BYTES_BIG_ENDIAN 1
+#define BYTES_BIG_ENDIAN (TARGET_LITTLE_ENDIAN == 0)
 
 /* Define this if most significant word of a multiword number is the lowest. */
-#define WORDS_BIG_ENDIAN 1
+#define WORDS_BIG_ENDIAN (BYTES_BIG_ENDIAN)
+
+/* Temporary.  */
+//#define FLOAT_WORDS_BIG_ENDIAN 1
 
 /* Define this to set the endianness to use in libgcc2.c, which can
    not depend on target_flags.  */
+#if defined(_BIG_ENDIAN)
 #define LIBGCC2_WORDS_BIG_ENDIAN 1
+#else
+#define LIBGCC2_WORDS_BIG_ENDIAN 0
+#endif
 
 /* Number of bits in an addressable storage unit */
 #define BITS_PER_UNIT           8
@@ -3296,3 +3315,8 @@ void FN ()                              
 } \
 %(startfile_crtinit)"
 
+#if 0
+#undef  MULTILIB_DEFAULTS
+#define MULTILIB_DEFAULTS { "mbig-endian" }
+#endif
+
diff -Naurp /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.md gcc-4.1.2/gcc/config/microblaze/microblaze.md
--- /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.md	2010-08-05 09:37:13.515629170 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze.md	2010-08-08 10:17:58.631598074 +0200
@@ -1159,13 +1159,13 @@
   ""
   {
         if (which_alternative == 0)
-                return "addik\t%D0,%1,0\;addik\t%0,r0,0";
+                return "addik\t%L0,%1,0\;addik\t%M0,r0,0";
         else {
                 char *temp2, *temp_final;
                 char *temp = microblaze_move_1word(operands,insn,TRUE);
 
                 operands[2] = gen_rtx_SUBREG(SImode, operands[0],4);
-                temp2 = "\n\taddk\t%D0,r0,%0\;addk\t%0,r0,r0";
+                temp2 = "\n\taddk\t%L0,r0,%0\;addk\t%M0,r0,r0";
 
                 temp_final = (char*) xmalloc(strlen(temp) + strlen(temp2) + 1);
                 strcpy(temp_final,temp);
@@ -1305,7 +1305,7 @@
         /*     fprintf(stderr,"Sign Extending DI \n");*/
         /*      operands[2] = gen_rtx(REG,REGNO(operands[0]) + 1);*/
         operands[2] = gen_rtx_SUBREG(SImode,operands[0],4);
-	temp2 = "%_\;add\t%D0,r0,%0\;add\t%0,%D0,%D0\;addc\t%0,r0,r0\;beqi\t%0,%-signextend\;addi\t%0,r0,0xffffffff\n%-signextend:";
+	temp2 = "%_\;add\t%L0,r0,%0\;add\t%M0,%L0,%L0\;addc\t%M0,r0,r0\;beqi\t%M0,%-signextend\;addi\t%M0,r0,0xffffffff\n%-signextend:";
   	temp_final = (char*) xmalloc(strlen(temp) + strlen(temp2) + 1);
 	strcpy(temp_final,temp);
 	strcat(temp_final,temp2);
@@ -1346,7 +1346,7 @@
         /*      operands[2] = gen_rtx(REG,REGNO(operands[0]) + 1);*/
         operands[2] = gen_rtx_SUBREG(SImode,operands[0],4);
 
-	temp2 = "%_\n\tsext8\t%0,%0\;add\t%D0,r0,%0\;add\t%0,%D0,%D0\;addc\t%0,r0,r0\;beqi\t%0,%-signextend\;addi\t%0,r0,0xffffffff\n%-signextend:";
+	temp2 = "%_\n\tsext8\t%0,%0\;add\t%L0,r0,%0\;add\t%M0,%L0,%L0\;addc\t%M0,r0,r0\;beqi\t%M0,%-signextend\;addi\t%M0,r0,0xffffffff\n%-signextend:";
   	temp_final = (char*) xmalloc(strlen(temp) + strlen(temp2) + 1);
 	strcpy(temp_final,temp);
 	strcat(temp_final,temp2);
@@ -1386,7 +1386,7 @@
         /*      operands[2] = gen_rtx(REG,REGNO(operands[0]) + 1);*/
         operands[2] = gen_rtx_SUBREG(SImode,operands[0],4);
 
-	temp2 = "%_\n\tsext16\t%0,%0\;add\t%D0,r0,%0\;add\t%0,%D0,%D0\;addc\t%0,r0,r0\;beqi\t%0,%-signextend\;addi\t%0,r0,0xffffffff\n%-signextend:";
+	temp2 = "%_\n\tsext16\t%0,%0\;add\t%L0,r0,%0\;add\t%M0,%D0,%D0\;addc\t%M0,r0,r0\;beqi\t%M0,%-signextend\;addi\t%M0,r0,0xffffffff\n%-signextend:";
   	temp_final = (char*) xmalloc(strlen(temp) + strlen(temp2) + 1);
 	strcpy(temp_final,temp);
 	strcat(temp_final,temp2);
@@ -2961,14 +2961,14 @@
         switch (GET_CODE (operands[0]))
         {
 
-            case GT: return  "cmp\tr18,%z1,%z2\;blti%?\tr18,%3";
+            case GT: return  "cmp\tr18,%z1,%z2\;blti%?\tr18,%3 #GT";
             case LE: return  "cmp\tr18,%z1,%z2\;bgei%?\tr18,%3";
             case GE: return  "cmp\tr18,%z2,%z1\;bgei%?\tr18,%3";
-            case LT: return  "cmp\tr18,%z2,%z1\;blti%?\tr18,%3";
-            case GTU:return  "cmpu\tr18,%z1,%z2\;blti%?\tr18,%3";
+            case LT: return  "cmp\tr18,%z2,%z1\;blti%?\tr18,%3 #LT";
+            case GTU:return  "cmpu\tr18,%z1,%z2\;blti%?\tr18,%3 #GTU";
             case LEU:return  "cmpu\tr18,%z1,%z2\;bgei%?\tr18,%3";
             case GEU:return  "cmpu\tr18,%z2,%z1\;bgei%?\tr18,%3";
-            case LTU:return  "cmpu\tr18,%z2,%z1\;blti%?\tr18,%3";
+            case LTU:return  "cmpu\tr18,%z2,%z1\;blti%?\tr18,%3 #LTU";
             default:
                 break;
         }
diff -Naurp /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.opt gcc-4.1.2/gcc/config/microblaze/microblaze.opt
--- /tmp/gcc-4.1.2/gcc/config/microblaze/microblaze.opt	2010-08-05 09:37:13.195643578 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze.opt	2010-08-07 12:19:58.334166900 +0200
@@ -19,6 +19,14 @@
 ; Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
 ; 02110-1301, USA.
 
+mbig-endian
+Target Report RejectNegative InverseMask(LITTLE_ENDIAN)
+Assume target CPU is configured as big endian
+
+mlittle-endian
+Target Report RejectNegative Mask(LITTLE_ENDIAN)
+Assume target CPU is configured as little endian
+
 mxl-soft-mul
 Target Mask(SOFT_MUL)
 Use the soft multiply emulation (default)
diff -Naurp /tmp/gcc-4.1.2/gcc/config/microblaze/t-microblaze gcc-4.1.2/gcc/config/microblaze/t-microblaze
--- /tmp/gcc-4.1.2/gcc/config/microblaze/t-microblaze	2010-08-05 09:37:13.495630051 +0200
+++ gcc-4.1.2/gcc/config/microblaze/t-microblaze	2010-08-08 01:33:14.285987161 +0200
@@ -13,7 +13,14 @@ LIB2FUNCS_EXTRA = $(srcdir)/config/micro
 # in the applications because the gcc crt files are found by the linker before
 # the glibc crt files
  
-EXTRA_MULTILIB_PARTS = crtbegin$(objext) crtend$(objext)
+EXTRA_MULTILIB_PARTS = crtbegin$(objext) crtend$(objext) #crtbeginS$(objext) crtendS$(objext) crti$(objext) crtn$(objext)
+
+# Build multiple copies of ?crt{i,n}.o, one for each target switch.
+#$(T)crti$(objext): $(srcdir)/config/microblaze/crti.s
+#	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c $(srcdir)/config/microblaze/crti.s -o $(T)crti$(objext)
+
+#$(T)crtn$(objext): $(srcdir)/config/microblaze/crtn.s
+#	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -c $(srcdir)/config/microblaze/crtn.s -o $(T)crtn$(objext)
 
 # We want fine grained libraries, so use the new code
 # to build the floating point emulation libraries.
@@ -32,6 +39,14 @@ MULTILIB_OPTIONS = mxl-barrel-shift mno-
 MULTILIB_DIRNAMES = bs m mh
 MULTILIB_EXCEPTIONS = *mxl-barrel-shift/mxl-multiply-high mxl-multiply-high
 
+
+#MULTILIB_OPTIONS = mxl-barrel-shift mno-xl-soft-mul mxl-multiply-high #mlittle-endian
+#MULTILIB_DIRNAMES = bs m mh #le
+#MULTILIB_EXCEPTIONS = *mxl-barrel-shift/mxl-multiply-high 
+#MULTILIB_EXCEPTIONS += mxl-multiply-high 
+#MULTILIB_EXCEPTIONS += *mxl-barrel-shift/mxl-multiply-high/mlittle-endian
+#MULTILIB_EXCEPTIONS += mxl-multiply-high/mlittle-endian
+
 ## Unfortunately, this does not work. We have to find a way to do this. 
 ## Otherwise, -xl-blazeit will cause only the base libgcc to be picked up always.
 ## MULTILIB_MATCHES = Zxl-blazeit=mxl-barrel-shift Zxl-blazeit=mno-xl-soft-mul
diff -Naurp /tmp/gcc-4.1.2/gcc/config.gcc gcc-4.1.2/gcc/config.gcc
--- /tmp/gcc-4.1.2/gcc/config.gcc	2010-08-05 09:37:13.615624840 +0200
+++ gcc-4.1.2/gcc/config.gcc	2010-08-07 23:16:49.673669164 +0200
@@ -1455,18 +1455,43 @@ mcore-*-pe*)
 	;;
 microblaze*-linux*)
 	tm_file="microblaze/microblaze.h dbxelf.h linux.h microblaze/linux.h"
+	echo "tgt=$target" >/tmp/edde
+	case $target in
+	microblazeel-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0"
+		;;
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=88"
+		;;
+	esac
 	tmake_file="t-slibgcc-elf-ver t-slibgcc-nolc-override t-linux microblaze/t-microblaze"
        extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o crtbeginT.o"
 	use_fixproto=no
 	;;
 microblaze*-uclinux*)
+	case $target in
+	microblazeel-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0"
+		;;
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1"
+		;;
+	esac
 	tm_file="microblaze/microblaze.h dbxelf.h microblaze/uclinux.h"
 	tmake_file="microblaze/t-microblaze"
        extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o crtbeginT.o"
 	use_fixproto=no
 	;;
 microblaze*-*-*)
-        tm_file="dbxelf.h microblaze/microblaze.h"
+      	case $target in
+	microblazele-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0"
+		;;
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1"
+		;;
+	esac
+  tm_file="dbxelf.h microblaze/microblaze.h"
         tmake_file=microblaze/t-microblaze
         ;;
 mips-sgi-irix[56]*)
diff -Naurp /tmp/gcc-4.1.2/gcc/config.gcc.orig gcc-4.1.2/gcc/config.gcc.orig
--- /tmp/gcc-4.1.2/gcc/config.gcc.orig	2010-08-05 09:37:13.605625306 +0200
+++ gcc-4.1.2/gcc/config.gcc.orig	2010-08-06 20:15:48.213000787 +0200
@@ -1455,18 +1455,40 @@ mcore-*-pe*)
 	;;
 microblaze*-linux*)
 	tm_file="microblaze/microblaze.h dbxelf.h linux.h microblaze/linux.h"
+	echo "tgt=$target" >/tmp/edde
+	case $target in
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=88"
+		;;
+	esac
 	tmake_file="t-slibgcc-elf-ver t-slibgcc-nolc-override t-linux microblaze/t-microblaze"
        extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o crtbeginT.o"
 	use_fixproto=no
 	;;
 microblaze*-uclinux*)
+	case $target in
+	microblazele-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0"
+		;;
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1"
+		;;
+	esac
 	tm_file="microblaze/microblaze.h dbxelf.h microblaze/uclinux.h"
 	tmake_file="microblaze/t-microblaze"
        extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o crtbeginT.o"
 	use_fixproto=no
 	;;
 microblaze*-*-*)
-        tm_file="dbxelf.h microblaze/microblaze.h"
+      	case $target in
+	microblazele-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=0"
+		;;
+	microblaze-*)
+		tm_defines="${tm_defines} TARGET_BIG_ENDIAN_DEFAULT=1"
+		;;
+	esac
+  tm_file="dbxelf.h microblaze/microblaze.h"
         tmake_file=microblaze/t-microblaze
         ;;
 mips-sgi-irix[56]*)
diff -Naurp /tmp/gcc-4.1.2/gcc/configure gcc-4.1.2/gcc/configure
--- /tmp/gcc-4.1.2/gcc/configure	2010-08-05 09:37:13.605625306 +0200
+++ gcc-4.1.2/gcc/configure	2010-08-06 20:15:48.213000787 +0200
@@ -15777,7 +15777,7 @@ esac
 case "$target" in
   i?86*-*-* | mips*-*-* | alpha*-*-* | powerpc*-*-* | sparc*-*-* | m68*-*-* \
   | x86_64*-*-* | hppa*-*-* | arm*-*-* | strongarm*-*-* | xscale*-*-* \
-  | xstormy16*-*-* | cris-*-* | xtensa-*-* | bfin-*-* | microblaze-*-*)
+  | xstormy16*-*-* | cris-*-* | xtensa-*-* | bfin-*-* | microblaze*-*-*)
     insn="nop"
     ;;
   ia64*-*-* | s390*-*-*)
