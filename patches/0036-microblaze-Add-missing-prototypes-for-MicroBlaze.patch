From dd3dd872400927fe9eb020212032e711029ad9bf Mon Sep 17 00:00:00 2001
Message-Id: <dd3dd872400927fe9eb020212032e711029ad9bf.1241484429.git.john.williams@petalogix.com>
In-Reply-To: <930a7bf07b58a3d6a48393a6419b2c958fc9dc2a.1241484427.git.john.williams@petalogix.com>
References: <930a7bf07b58a3d6a48393a6419b2c958fc9dc2a.1241484427.git.john.williams@petalogix.com>
From: John Williams <john.williams@petalogix.com>
Date: Tue, 28 Apr 2009 14:39:48 +1000
Subject: [PATCH 36/63] microblaze: Add missing prototypes for MicroBlaze

---
 gcc/config/microblaze/microblaze-protos.h |    7 +++++++
 gcc/config/microblaze/microblaze.c        |    4 +---
 gcc/config/microblaze/t-microblaze        |    1 +
 3 files changed, 9 insertions(+), 3 deletions(-)

diff --git a/gcc/config/microblaze/microblaze-protos.h b/gcc/config/microblaze/microblaze-protos.h
index e8cb350..089f08b 100644
--- a/gcc/config/microblaze/microblaze-protos.h
+++ b/gcc/config/microblaze/microblaze-protos.h
@@ -38,4 +38,11 @@ extern void shift_double_left_imm    PARAMS ((rtx []));
 extern void override_options (void);
 extern void machine_dependent_reorg PARAMS ((void));
 #endif  /* RTX_CODE */
+
+#ifdef TREE_CODE
+extern void function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode,
+				  tree, int);
+extern rtx function_arg (CUMULATIVE_ARGS *, enum machine_mode, tree, int);
+#endif /* TREE_CODE */
+
 #endif  /* __MICROBLAZE_PROTOS__ */
diff --git a/gcc/config/microblaze/microblaze.c b/gcc/config/microblaze/microblaze.c
index 8514010..467800d 100644
--- a/gcc/config/microblaze/microblaze.c
+++ b/gcc/config/microblaze/microblaze.c
@@ -203,8 +203,6 @@ int simple_memory_operand 			PARAMS ((rtx, enum machine_mode));
 void trace 					PARAMS ((const char *, const char *, const char *));
 void gen_conditional_branch 			PARAMS ((rtx *, enum rtx_code));
 void init_cumulative_args 			PARAMS ((CUMULATIVE_ARGS *,tree, rtx));
-void function_arg_advance 			PARAMS ((CUMULATIVE_ARGS *, enum machine_mode, tree, int));
-struct rtx_def *function_arg 			PARAMS ((CUMULATIVE_ARGS *, enum machine_mode, tree, int));
 int function_arg_partial_nregs 			PARAMS ((CUMULATIVE_ARGS *, enum machine_mode, tree, int));
 HOST_WIDE_INT microblaze_debugger_offset 	PARAMS ((rtx, HOST_WIDE_INT));
 void microblaze_output_lineno 			PARAMS ((FILE *, int));
@@ -2721,7 +2719,7 @@ function_arg_advance (
 /* Return an RTL expression containing the register for the given mode,
    or 0 if the argument is to be passed on the stack.  */
 
-struct rtx_def *
+rtx
 function_arg (
   CUMULATIVE_ARGS *cum,		/* current arg information */
   enum machine_mode mode,	/* current arg mode */
diff --git a/gcc/config/microblaze/t-microblaze b/gcc/config/microblaze/t-microblaze
index cc1929b..4b50cec 100644
--- a/gcc/config/microblaze/t-microblaze
+++ b/gcc/config/microblaze/t-microblaze
@@ -37,3 +37,4 @@ MULTILIB_EXCEPTIONS = *mxl-barrel-shift/mxl-multiply-high mxl-multiply-high
 ## Unfortunately, this does not work. We have to find a way to do this. 
 ## Otherwise, -xl-blazeit will cause only the base libgcc to be picked up always.
 ## MULTILIB_MATCHES = Zxl-blazeit=mxl-barrel-shift Zxl-blazeit=mno-xl-soft-mul
+
-- 
1.5.3.8

