diff -Naur gcc-4.1.2.org/gcc/config/microblaze/microblaze-protos.h gcc-4.1.2/gcc/config/microblaze/microblaze-protos.h
--- gcc-4.1.2.org/gcc/config/microblaze/microblaze-protos.h	2010-07-11 01:11:36.253365873 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze-protos.h	2010-07-11 01:16:38.509786744 +0200
@@ -37,6 +37,29 @@
 extern void shift_double_left_imm    PARAMS ((rtx []));
 extern void override_options (void);
 extern void machine_dependent_reorg PARAMS ((void));
+extern rtx microblaze_legitimize_address PARAMS ((rtx , rtx,
+                                                  enum machine_mode));
+extern rtx microblaze_return_addr_rtx (int count,
+                                       rtx frameaddr ATTRIBUTE_UNUSED);
+extern int microblaze_const_double_ok PARAMS ((rtx, enum machine_mode));
+extern void init_cumulative_args  PARAMS ((CUMULATIVE_ARGS *,tree, rtx));
+extern int microblaze_can_use_return_insn PARAMS ((void));
+extern void microblaze_order_regs_for_local_alloc PARAMS ((void));
+extern HOST_WIDE_INT microblaze_debugger_offset PARAMS ((rtx, HOST_WIDE_INT));
+extern void output_ascii  PARAMS ((FILE *, const char *, int));
+extern void final_prescan_insn    PARAMS ((rtx, rtx *, int));
+extern void print_operand PARAMS ((FILE *, rtx, int));
+extern void print_operand_address PARAMS ((FILE *, rtx));
+int double_memory_operand                       PARAMS ((rtx, enum machine_mode));
+bool microblaze_legitimate_address_p            PARAMS ((enum machine_mode, rtx, int ));
+int simple_memory_operand                       PARAMS ((rtx, enum machine_mode));
+const char* microblaze_move_2words              PARAMS ((rtx *, rtx));
+int microblaze_is_interrupt_handler             PARAMS ((void));
+enum reg_class microblaze_secondary_reload_class PARAMS ((enum reg_class, enum machine_mode, rtx, int));
+int microblaze_regno_ok_for_base_p              PARAMS ((int, int));
+HOST_WIDE_INT microblaze_initial_elimination_offset
+                                                PARAMS ((int, int));
+void microblaze_declare_object                  PARAMS ((FILE *, char *, char *, char *, int));
 #endif  /* RTX_CODE */
 
 #ifdef TREE_CODE
diff -Naur gcc-4.1.2.org/gcc/config/microblaze/microblaze.c gcc-4.1.2/gcc/config/microblaze/microblaze.c
--- gcc-4.1.2.org/gcc/config/microblaze/microblaze.c	2010-07-11 01:11:36.393359285 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze.c	2010-07-11 01:16:38.509786744 +0200
@@ -55,7 +55,7 @@
 #include "target.h"
 #include "target-def.h"
 #include "tm_p.h"
-
+#include "integrate.h"
 
 #if defined(USG) || !defined(HAVE_STAB_H)
 #include "gstab.h"  /* If doing DBX on sysV, use our own stab.h.  */
@@ -563,6 +563,17 @@
 
 struct gcc_target targetm = TARGET_INITIALIZER;
 
+rtx
+microblaze_return_addr_rtx (int count, rtx frameaddr ATTRIBUTE_UNUSED)
+{
+  rtx x;
+
+  x = (count == 0) ? gen_rtx_PLUS (Pmode,
+          get_hard_reg_initial_val(Pmode, MB_ABI_SUB_RETURN_ADDR_REGNUM),
+               GEN_INT (8)) : (rtx) 0;
+  return x;
+}
+
 /* Return truth value if a CONST_DOUBLE is ok to be a legitimate constant.  */
 
 int
diff -Naur gcc-4.1.2.org/gcc/config/microblaze/microblaze.h gcc-4.1.2/gcc/config/microblaze/microblaze.h
--- gcc-4.1.2.org/gcc/config/microblaze/microblaze.h	2010-07-11 01:11:36.403358605 +0200
+++ gcc-4.1.2/gcc/config/microblaze/microblaze.h	2010-07-11 01:16:38.509786744 +0200
@@ -1560,11 +1560,7 @@
    So currently we support only the current frame.  */
 
 #define RETURN_ADDR_RTX(count, frame)			\
-  ((count == 0)						\
-   ?  gen_rtx_PLUS (Pmode,                              \
-                    get_hard_reg_initial_val(Pmode, MB_ABI_SUB_RETURN_ADDR_REGNUM), \
-                    GEN_INT (8))                        \
-   : (rtx) 0)
+  microblaze_return_addr_rtx (count, frame)
 
 /* Structure to be filled in by compute_frame_size with register
    save masks, and offsets for the current function.  */
