
#define SYSROOT_SUFFIX_SPEC ""
#define SYSROOT_HEADERS_SUFFIX_SPEC ""

#if 1
/* TARGET_BIG_ENDIAN_DEFAULT is set in
   config.gcc for big endian configurations.  */
#if TARGET_BIG_ENDIAN_DEFAULT
#define TARGET_ENDIAN_DEFAULT    0
#define TARGET_ENDIAN_OPTION     "mbig-endian"
#else
#define TARGET_ENDIAN_DEFAULT    MASK_LITTLE_ENDIAN
#define TARGET_ENDIAN_OPTION     "mlittle-endian"
#endif
#endif

#if 0
#undef DRIVER_SELF_SPECS
#define DRIVER_SELF_SPECS   \
   { "-" TARGET_ENDIAN_OPTION }
#endif

/* Redefine the entire default search path for include files so that
   it will be generated by compiler dynamically on base of the compiler's
   binary location. */
#undef INCLUDE_DEFAULTS
#define INCLUDE_DEFAULTS                                       \
  {                                                            \
    { GPLUSPLUS_INCLUDE_DIR, "G++", 1, 1, 1 },                 \
    { GPLUSPLUS_TOOL_INCLUDE_DIR, "G++", 1, 1, 1 },            \
    { GPLUSPLUS_BACKWARD_INCLUDE_DIR, "G++", 1, 1, 1 },        \
    { GCC_INCLUDE_DIR, "GCC", 0, 0, 0 },                       \
    { TOOL_INCLUDE_DIR, "BINUTILS", 0, 0, 0 },                 \
    { "/usr/include", 0, 0, 1, 1 },                            \
    { 0, 0, 0, 0, 0 }                                          \
  }

/* Define the macro to 1 to enable changes made in the gcc.c file
   to exclude host library directories such as /lib and /libexec from the
   default search path for libraries. */
#define TARGET_SYSTEM_ROOT_RELOCATABLE_ONLY 1

/* Linux and BlueCat-specific declarations */
#undef  TARGET_OS_CPP_BUILTINS
#define TARGET_OS_CPP_BUILTINS()          \
  do                                      \
    {                                     \
      LINUX_TARGET_OS_CPP_BUILTINS();     \
      if (flag_pic)                       \
        {                                 \
          builtin_define ("__PIC__");     \
          builtin_define ("__pic__");     \
        }                                 \
    }                                     \
  while (0)


/* Target CPU builtins */
#undef TARGET_CPU_CPP_BUILTINS
#define TARGET_CPU_CPP_BUILTINS()				\
  do								\
    {								\
        builtin_define ("__MICROBLAZE__");                      \
        builtin_define ("__microblaze__");                      \
        if (TARGET_LITTLE_ENDIAN)                               \
          {                                                     \
              builtin_define ("_LITTLE_ENDIAN");                \
              builtin_define ("__MICROBLAZEEL__");              \
          }                                                     \
        else                                                    \
          {                                                     \
              builtin_define ("_BIG_ENDIAN");                   \
              builtin_define ("__MICROBLAZEEB__");              \
          }                                                     \
                                                                \
        builtin_assert ("cpu=microblaze");                      \
        builtin_assert ("machine=microblaze");                  \
} while (0)

#define DYNAMIC_LINKER "/lib/ld.so.1"
#undef  SUBTARGET_EXTRA_SPECS
#define SUBTARGET_EXTRA_SPECS \
  { "dynamic_linker", DYNAMIC_LINKER }

#undef LINK_SPEC
#define LINK_SPEC "%{shared:-shared} \
  %{!shared: \
    %{!static: \
      %{rdynamic:-export-dynamic} \
      %{!dynamic-linker:-dynamic-linker %(dynamic_linker)}} \
    %{static:-static}} \
  %{mbig-endian:-EB} \
  %{mlittle-endian:-EL}"

#undef  MULTILIB_DEFAULTS
#define MULTILIB_DEFAULTS \
        { TARGET_ENDIAN_OPTION }

