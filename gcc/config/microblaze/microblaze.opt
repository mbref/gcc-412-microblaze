; Options for the MicroBlaze port of the compiler
;
; Copyright (C) 2006 Free Software Foundation, Inc.
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 2, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT
; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
; License for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING.  If not, write to the Free
; Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA
; 02110-1301, USA.

mxl-soft-mul
Target Mask(SOFT_MUL)
Use the soft multiply emulation

mxl-soft-div
Target Mask(SOFT_DIV)
Use the soft divide emulation

mxl-barrel-shift
Target Mask(BARREL_SHIFT)
Use the hardware barrel shifter instead of emulation

msoft-float
Target Report RejectNegative Mask(SOFT_FLOAT)
Prevent the use of all hardware floating-point instructions

mhard-float
Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT)
Allow the use of hardware floating-point instructions

mxl-pattern-compare
Target Mask(PATTERN_COMPARE)
Use pattern compare instructions

msmall-divides
Target Joined Mask(SMALL_DIVIDES)
Use table lookup optimization for small signed integer divisions

mxl-stack-check
Target Mask(STACK_CHECK)
Check Stack at runtime

mxl-gp-opt
Target Mask(XLGPOPT)
Use GP relative sdata/sbss sections[for xlnx]

mstats
Target Joined Mask(STATS)
Output compiler statistics

mdebug
Target Mask(DEBUG_MODE) Undocumented

mdebuga
Target Mask(DEBUG_A_MODE) Undocumented

mdebugb
Target Mask(DEBUG_B_MODE) Undocumented

mdebugc
Target Mask(DEBUG_C_MODE) Undocumented

mdebugd
Target Mask(DEBUG_D_MODE) Undocumented

mdebuge
Target Mask(DEBUG_E_MODE) Undocumented

mdebugf
Target Mask(DEBUG_F_MODE) Undocumented

mdebugg
Target Mask(DEBUG_G_MODE) Undocumented

mdebugh
Target Mask(DEBUG_H_MODE) Undocumented

mdebugi
Target Mask(DEBUG_I_MODE) Undocumented

mcpu=
Target RejectNegative Joined Var(microblaze_select_cpu)
-mcpu=PROCESSOR		Use features of and schedule code for given CPU

mtune=
Target RejectNegative Joined Var(microblaze_select_tune)
-mtune=PROCESSOR	Schedule code for given CPU

mno-clearbss
Target RejectNegative
Clear the BSS to zero and place zero initialized in BSS

mhalf-pic
Target Mask(HALF_PIC)
Emit OSF-style pic refs to externs

membedded-pic
Target Mask(EMBEDDED_PIC)
-membedded-pic is a form of PIC code suitable for embedded systems
